-- MySQL Script generated by MySQL Workbench
-- Tue Jul 27 12:25:02 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema musically_minds
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema musically_minds
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS musically_minds DEFAULT CHARACTER SET utf8 ;
USE musically_minds ;

-- -----------------------------------------------------
-- Table user
-- -----------------------------------------------------
CREATE TABLE user (
  user_id INT NOT NULL AUTO_INCREMENT,
  username VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  sessionkey VARCHAR(128) NULL,
  is_active TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (user_id),
  UNIQUE (username ASC)
);


-- -----------------------------------------------------
-- Table band
-- -----------------------------------------------------
CREATE TABLE band (
  band_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  PRIMARY KEY (band_id),
  UNIQUE (name ASC)
);


-- -----------------------------------------------------
-- Table band_member
-- -----------------------------------------------------
CREATE TABLE band_member (
  band_member_id INT NOT NULL AUTO_INCREMENT,
  user_id INT NOT NULL,
  band_id INT NOT NULL,
  PRIMARY KEY (band_member_id),
  FOREIGN KEY (band_id) REFERENCES band (band_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (user_id) REFERENCES user (user_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table song
-- -----------------------------------------------------
CREATE TABLE song (
  song_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  band_id INT NOT NULL,
  PRIMARY KEY (song_id),
  UNIQUE (name ASC),
  FOREIGN KEY (band_id) REFERENCES band (band_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table line_up
-- -----------------------------------------------------
CREATE TABLE line_up (
  line_up_id INT NOT NULL AUTO_INCREMENT,
  band_id INT NOT NULL,
  song_id INT NOT NULL,
  PRIMARY KEY (line_up_id),
  FOREIGN KEY (band_id) REFERENCES band (band_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (song_id) REFERENCES song (song_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Table song_part_type
-- -----------------------------------------------------
CREATE TABLE song_part_type (
  song_part_type_id INT NOT NULL AUTO_INCREMENT,
  name VARCHAR(45) NOT NULL,
  PRIMARY KEY (song_part_type_id)
);


-- -----------------------------------------------------
-- Table song_part
-- -----------------------------------------------------
CREATE TABLE song_part (
  song_part_id INT NOT NULL AUTO_INCREMENT,
  line_number INT NOT NULL,
  song_part_type_id INT NOT NULL,
  song_id INT NOT NULL,
  chords VARCHAR(255) NOT NULL,
  text VARCHAR(255) NOT NULL,
  PRIMARY KEY (song_part_id),
  FOREIGN KEY (song_id) REFERENCES song (song_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (song_part_type_id) REFERENCES song_part_type (song_part_type_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

CREATE INDEX line_number ON song_part(line_number);


-- -----------------------------------------------------
-- Table tab
-- -----------------------------------------------------
CREATE TABLE tab (
  tab_id INT NOT NULL AUTO_INCREMENT,
  song_id INT NOT NULL,
  line_number INT NOT NULL,
  tab_content VARCHAR(255) NOT NULL,
  PRIMARY KEY (tab_id),
  FOREIGN KEY (song_id) REFERENCES song (song_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  FOREIGN KEY (line_number) REFERENCES song_part (line_number)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
